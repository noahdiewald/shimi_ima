{
  "_id": "_design/file_manager",
  "views": {
    "by_path": {
      "map": "function(doc) { 
        if (doc.path) {
          if (typeof Object.keys != 'function') {
            Object.keys = function(obj) {
              if (typeof obj != 'object' && typeof obj != 'function' || obj == null) {
                throw TypeError('Object.keys called on non-object');
              }
              var keys = [];
              for (var p in obj) obj.hasOwnProperty(p) &&keys.push(p);
              return keys;
            }
          }
        
          var attachment = doc._attachments[Object.keys(doc._attachments)[0]];
          var content_type = attachment.content_type
          var size = attachment.length / (1024 * 1024)
        
          emit(doc.path, {content_type: content_type, size: size.toFixed(3)}) 
        }
      }"
    },
    "by_content_type": {
      "map": "function(doc) { 
        if (doc.path) {
          if (typeof Object.keys != 'function') {
            Object.keys = function(obj) {
              if (typeof obj != 'object' && typeof obj != 'function' || obj == null) {
                throw TypeError('Object.keys called on non-object');
              }
              var keys = [];
              for (var p in obj) obj.hasOwnProperty(p) &&keys.push(p);
              return keys;
            }
          }
        
          var attachment = doc._attachments[Object.keys(doc._attachments)[0]];
          var content_type = attachment.content_type
          var size = attachment.length / (1024 * 1024)
        
          emit(content_type, {path: doc.path, size: size.toFixed(3)}) 
        }
      }"
    }
  }
}
